{"ast":null,"code":"var _jsxFileName = \"/Users/mac/project/ArbitrageWebsite/frontend/src/components/PriceChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n\n/**\n * 비트코인 과거 가격 차트 컴포넌트.\n * \n * Binance API를 통해 BTC의 과거 30일 가격 데이터를 가져와\n * Chart.js로 선 그래프로 시각화합니다.\n * \n * @returns {JSX.Element} 가격 차트 UI\n */\nfunction PriceChart() {\n  _s();\n  const [chartData, setChartData] = useState(null); // Chart.js에 사용될 차트 데이터\n  const [loading, setLoading] = useState(true); // 데이터 로딩 상태\n  const [error, setError] = useState(null); // 에러 상태\n\n  useEffect(() => {\n    const fetchHistoricalData = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/api/historical_prices/btc');\n        const data = response.data;\n        const labels = data.map(item => new Date(item.timestamp).toLocaleDateString());\n        const prices = data.map(item => item.close);\n        setChartData({\n          labels: labels,\n          datasets: [{\n            label: 'BTC Price (USD)',\n            data: prices,\n            borderColor: 'rgb(75, 192, 192)',\n            tension: 0.1\n          }]\n        });\n        setLoading(false);\n      } catch (err) {\n        console.error(\"Failed to fetch historical data:\", err);\n        setError(\"Failed to fetch historical data.\");\n        setLoading(false);\n      }\n    };\n    fetchHistoricalData();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading chart data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 12\n    }, this);\n  }\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Bitcoin Historical Price'\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: chartData && /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n_s(PriceChart, \"/N1FfhlAfE3Gd6aiX9egY6Yx4fM=\");\n_c = PriceChart;\nexport default PriceChart;\nvar _c;\n$RefreshReg$(_c, \"PriceChart\");","map":{"version":3,"names":["React","useState","useEffect","axios","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","PriceChart","_s","chartData","setChartData","loading","setLoading","error","setError","fetchHistoricalData","response","get","data","labels","map","item","Date","timestamp","toLocaleDateString","prices","close","datasets","label","borderColor","tension","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","options","responsive","plugins","legend","position","title","display","text","_c","$RefreshReg$"],"sources":["/Users/mac/project/ArbitrageWebsite/frontend/src/components/PriceChart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\n/**\n * 비트코인 과거 가격 차트 컴포넌트.\n * \n * Binance API를 통해 BTC의 과거 30일 가격 데이터를 가져와\n * Chart.js로 선 그래프로 시각화합니다.\n * \n * @returns {JSX.Element} 가격 차트 UI\n */\nfunction PriceChart() {\n  const [chartData, setChartData] = useState(null); // Chart.js에 사용될 차트 데이터\n  const [loading, setLoading] = useState(true); // 데이터 로딩 상태\n  const [error, setError] = useState(null); // 에러 상태\n\n  useEffect(() => {\n    const fetchHistoricalData = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/api/historical_prices/btc');\n        const data = response.data;\n\n        const labels = data.map(item => new Date(item.timestamp).toLocaleDateString());\n        const prices = data.map(item => item.close);\n\n        setChartData({\n          labels: labels,\n          datasets: [\n            {\n              label: 'BTC Price (USD)',\n              data: prices,\n              borderColor: 'rgb(75, 192, 192)',\n              tension: 0.1,\n            },\n          ],\n        });\n        setLoading(false);\n      } catch (err) {\n        console.error(\"Failed to fetch historical data:\", err);\n        setError(\"Failed to fetch historical data.\");\n        setLoading(false);\n      }\n    };\n\n    fetchHistoricalData();\n  }, []);\n\n  if (loading) {\n    return <p>Loading chart data...</p>;\n  }\n\n  if (error) {\n    return <p style={{ color: 'red' }}>{error}</p>;\n  }\n\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      title: {\n        display: true,\n        text: 'Bitcoin Historical Price',\n      },\n    },\n  };\n\n  return (\n    <div>\n      {chartData && <Line data={chartData} options={options} />}\n    </div>\n  );\n}\n\nexport default PriceChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}